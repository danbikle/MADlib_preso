~/mlp/cr_vectors.txt

This is a screen dump of my create vectors script.

The report at the end shows that the market exhibits Mean-Reversion.


dan@madlibsvm ~/mlp
dan@madlibsvm ~/mlp
dan@madlibsvm ~/mlp $ ./psqlmad.bash -f cr_vectors.sql
--
-- ~/mlp/cr_vectors.sql
--
-- I use this script to create some vectors to be used with MADlib.
-- Also the vectors are useful for studying heuristic based predictions.
-- Start by calculating the normalized 1 day gain for all rows except the most recent
-- which has no value yet.
DROP   TABLE vec1;
DROP TABLE
CREATE TABLE vec1 AS
SELECT
ydate
,closing_price cp
,LEAD(closing_price,1,NULL) OVER (ORDER BY ydate) lead_cp
FROM mydata
ORDER BY ydate
;
SELECT 5292
-- Calculate normalized 1 day gain for each row:
DROP   TABLE vec2;
DROP TABLE
CREATE TABLE vec2 AS
SELECT
ydate
,(lead_cp - cp) / cp n1dg
FROM vec1
ORDER BY ydate
;
SELECT 5292
-- Create simple, 2 element vector.
-- Also calculate 'y-value' for each vector:
DROP   TABLE my_vectors;
DROP TABLE
CREATE TABLE my_vectors AS
SELECT
ydate
,n1dg
,lag(n1dg,1,NULL) OVER (ORDER BY ydate) prev_1st_n1dg
,lag(n1dg,2,NULL) OVER (ORDER BY ydate) prev_2nd_n1dg
,CASE WHEN n1dg <= 0 THEN 0 ELSE 1 END  yvalue
FROM vec2
ORDER BY ydate
;
SELECT 5292
-- Study distributions:
SELECT yvalue, COUNT(yvalue) FROM my_vectors GROUP BY yvalue;
 yvalue | count 
--------+-------
      1 |  2801
      0 |  2491
(2 rows)

SELECT 
ROUND(MIN(n1dg),5)  min_n1dg
,ROUND(AVG(n1dg),5) avg_n1dg
,ROUND(MAX(n1dg),5) max_n1dg
,ROUND(STDDEV(n1dg),5) stddev_n1dg
FROM my_vectors
;
 min_n1dg | avg_n1dg | max_n1dg | stddev_n1dg 
----------+----------+----------+-------------
 -0.09845 |  0.00033 |  0.14520 |     0.01218
(1 row)

-- Are the tails interesting?
-- English:
-- Count the yvalues,
-- Where yesterday was down by more than 1-std-deviation,
-- And day before yesterday was down by more than 1-std-deviation
SELECT 
yvalue
,COUNT(yvalue)
FROM my_vectors
WHERE prev_1st_n1dg < -0.012
AND   prev_2nd_n1dg < -0.012
GROUP BY yvalue
;
 yvalue | count 
--------+-------
      1 |    57
      0 |    33
(2 rows)

-- English:
-- Count the yvalues,
-- Where yesterday was up by more than 1-std-deviation,
-- And day before yesterday was up by more than 1-std-deviation
SELECT 
yvalue
,COUNT(yvalue)
FROM my_vectors
WHERE prev_1st_n1dg > 0.012
AND   prev_2nd_n1dg > 0.012
GROUP BY yvalue
;
 yvalue | count 
--------+-------
      1 |    30
      0 |    48
(2 rows)

dan@madlibsvm ~/mlp
dan@madlibsvm ~/mlp
dan@madlibsvm ~/mlp
